import pandas as pd
import numpy as np
from mlxtend.preprocessing import minmax_scaling
from scipy import stats
from sklearn.preprocessing import OneHotEncoder
import os
import pickle
np.random.seed(0)
from sklearn.metrics import mean_absolute_percentage_error
from sklearn.tree import DecisionTreeRegressor
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_absolute_error
from sklearn.ensemble import RandomForestRegressor
from sklearn.linear_model import LogisticRegression
from sklearn.impute import SimpleImputer



file = pd.read_csv('output.csv')

file = file.drop('Unnamed: 0', axis=1)
file = file.drop('type', axis=1)
file = file.drop('garage', axis=1)
file.etage=file.etage.replace({"-","0"}, inplace=True)

X = file.drop('cost', axis=1)
y = file.cost

my_imputer = SimpleImputer()
X = pd.DataFrame(my_imputer.fit_transform(X))

train_X, val_X, train_y, val_y = train_test_split(X, y, random_state=0)

model = RandomForestRegressor()

model.fit(train_X, train_y)

filename = 'model.sav'
pickle.dump(model, open(filename, 'wb'))